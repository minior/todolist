PLANNING

NEXT STEPS
    - accountcreate: DONE make frontend for page (simple form). 
        - DONE accountcreate (user n email n pw filled)
            - DONE JS validation
            - DONE php validation 
                - DONE alphanumeric username (or inc _) & pw containing 1 alphabet + 1 number (regex)
        - DONE add pw hashing before inserting
        - DONE add email field to database, to be along with username
    - index: start populating html / javascript actual todolist (refer to add/edit.php in 10 htdocs)
    - login: DONE form of login page 
        -> DONE php login validation 
        - show password buttons
        - DONE ensure match with database
    - next feature: DONE form validation in login 
        - DONE js and php files 
    - DONE add function file for echoing and unsetting error / success msges
    - might combine some function files (ac create & login tgt maybe)
        - might organise functions into classes, then follow psr-4 (class match file name)
    - add email confirmation (send email for validation, delete from database if not confirmed after x days)
        - add prohibited words for usernames
    - add feature to show task complete date
    - add pages for edit and delete account info 
    
    -feature: pretty-fy js alert for form validations
    -expand feature: email validation, allow ALL types of domains eg '.fr'

MY CONVENTIONS
    - classes use PascalCase, functions & methods use camelCase, variables use snake_case

features / parts
1. SQL
    - database with diff users and logins
    - database of items for each user + state of whether completed (many to 1 r/s)
        - deadlines included in database + date completed (1 to 1)

CREATE DATABASE todolist;

GRANT ALL ON todolist.* TO 'jedo'@'localhost' IDENTIFIED BY 'minior';
GRANT ALL ON todolist.* TO 'jedo'@'127.0.0.1' IDENTIFIED BY 'minior';

CREATE TABLE users (
    user_id INTEGER NOT NULL AUTO_INCREMENT,
    username varchar(255),
    email varchar(255),
    password varchar(255),
    PRIMARY KEY(user_id)
);

CREATE TABLE tasks (
    task_id INTEGER NOT NULL AUTO_INCREMENT,
    task varchar(255) NOT NULL,
    status BOOL NOT NULL,
    deadline DATE,
    user_id INTEGER,
    PRIMARY KEY(task_id),
    CONSTRAINT fk_userid FOREIGN KEY (user_id) REFERENCES users (user_id) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
    

    
2. php to retrieve from server info + user verification + sessions
 - php page to show previously completed tasks (READ)
 - escapes security issues such as injections

3. simple html to have checkbox that upon clicking, checks off task 
    - also include colour change
        PROBLEM- how to run js stuff only if logged in -> perhaps idh to. I can just run the code to retrieve sql components and add them (see crud app from coursera javascript course)

4. have a page with all completed tasks and date completed (phase 2)

UNSURE PARTS:
    login.php: use of POST to redir w user_id
    js form validate.js: will !pw.value cause '0' to be read as 'empty'?
